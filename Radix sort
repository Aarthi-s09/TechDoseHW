//radix sort with counting sort code

#include <iostream>
#include<vector>
#include<algorithm>
#include <cmath>
using namespace std;

void countingsort(vector<int> &arr,vector<int> digits){
    vector<int> freq(10,0);
    vector<int> ans(arr.size());
    for(int d:digits){
        freq[d]++;
    }
    for(int i=1;i<freq.size();i++){
        freq[i]+=freq[i-1];
    }
    
    for(int i=arr.size()-1;i>=0;i--){
        ans[freq[digits[i]]-1]=arr[i];
        freq[digits[i]]--;
    }
    for(int i=0;i<arr.size();i++){
        arr[i]=ans[i];
    }
    
}

int main() {
    vector<int> arr={23,321,349,34,42,1};
   
      int divi=1;
    int maxv=*max_element(arr.begin(),arr.end());
    while(maxv / divi > 0){
          vector<int> digit; 
      
        for (int n : arr) {
            digit.push_back((n / divi) % 10);
        }

        countingsort(arr,digit);
        divi=divi*10;
     
        
    }
    for (int n : arr) {
        cout << n << " ";
    }
    

    return 0;
}
